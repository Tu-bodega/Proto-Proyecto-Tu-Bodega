{"ast":null,"code":"/**\r\n * Copyright (c) 2013-present, Facebook, Inc.\r\n *\r\n * This source code is licensed under the MIT license found in the\r\n * LICENSE file in the root directory of this source tree.\r\n */\n\n'use strict';\n\n/**\r\n * Use invariant() to assert state which your program assumes to be true.\r\n *\r\n * Provide sprintf-style format (only %s is supported) and arguments\r\n * to provide information about what broke and what you were\r\n * expecting.\r\n *\r\n * The invariant message will be stripped in production, but the invariant\r\n * will remain to ensure logic does not differ in production.\r\n */\nvar invariant = function (condition, format, a, b, c, d, e, f) {\n  if (process.env.NODE_ENV !== 'production') {\n    if (format === undefined) {\n      throw new Error('invariant requires an error message argument');\n    }\n  }\n  if (!condition) {\n    var error;\n    if (format === undefined) {\n      error = new Error('Minified exception occurred; use the non-minified dev environment ' + 'for the full error message and additional helpful warnings.');\n    } else {\n      var args = [a, b, c, d, e, f];\n      var argIndex = 0;\n      error = new Error(format.replace(/%s/g, function () {\n        return args[argIndex++];\n      }));\n      error.name = 'Invariant Violation';\n    }\n    error.framesToPop = 1; // we don't care about invariant's own frame\n    throw error;\n  }\n};\nmodule.exports = invariant;","map":{"version":3,"names":["invariant","condition","format","a","b","c","d","e","f","process","env","NODE_ENV","undefined","Error","error","args","argIndex","replace","name","framesToPop","module","exports"],"sources":["C:/Users/kamil/OneDrive/Escritorio/Proto-Proyecto-Tu-Bodega/front/node_modules/invariant/browser.js"],"sourcesContent":["/**\r\n * Copyright (c) 2013-present, Facebook, Inc.\r\n *\r\n * This source code is licensed under the MIT license found in the\r\n * LICENSE file in the root directory of this source tree.\r\n */\r\n\r\n'use strict';\r\n\r\n/**\r\n * Use invariant() to assert state which your program assumes to be true.\r\n *\r\n * Provide sprintf-style format (only %s is supported) and arguments\r\n * to provide information about what broke and what you were\r\n * expecting.\r\n *\r\n * The invariant message will be stripped in production, but the invariant\r\n * will remain to ensure logic does not differ in production.\r\n */\r\n\r\nvar invariant = function(condition, format, a, b, c, d, e, f) {\r\n  if (process.env.NODE_ENV !== 'production') {\r\n    if (format === undefined) {\r\n      throw new Error('invariant requires an error message argument');\r\n    }\r\n  }\r\n\r\n  if (!condition) {\r\n    var error;\r\n    if (format === undefined) {\r\n      error = new Error(\r\n        'Minified exception occurred; use the non-minified dev environment ' +\r\n        'for the full error message and additional helpful warnings.'\r\n      );\r\n    } else {\r\n      var args = [a, b, c, d, e, f];\r\n      var argIndex = 0;\r\n      error = new Error(\r\n        format.replace(/%s/g, function() { return args[argIndex++]; })\r\n      );\r\n      error.name = 'Invariant Violation';\r\n    }\r\n\r\n    error.framesToPop = 1; // we don't care about invariant's own frame\r\n    throw error;\r\n  }\r\n};\r\n\r\nmodule.exports = invariant;\r\n"],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;;AAEA,YAAY;;AAEZ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA,IAAIA,SAAS,GAAG,SAAAA,CAASC,SAAS,EAAEC,MAAM,EAAEC,CAAC,EAAEC,CAAC,EAAEC,CAAC,EAAEC,CAAC,EAAEC,CAAC,EAAEC,CAAC,EAAE;EAC5D,IAAIC,OAAO,CAACC,GAAG,CAACC,QAAQ,KAAK,YAAY,EAAE;IACzC,IAAIT,MAAM,KAAKU,SAAS,EAAE;MACxB,MAAM,IAAIC,KAAK,CAAC,8CAA8C,CAAC;IACjE;EACF;EAEA,IAAI,CAACZ,SAAS,EAAE;IACd,IAAIa,KAAK;IACT,IAAIZ,MAAM,KAAKU,SAAS,EAAE;MACxBE,KAAK,GAAG,IAAID,KAAK,CACf,oEAAoE,GACpE,6DACF,CAAC;IACH,CAAC,MAAM;MACL,IAAIE,IAAI,GAAG,CAACZ,CAAC,EAAEC,CAAC,EAAEC,CAAC,EAAEC,CAAC,EAAEC,CAAC,EAAEC,CAAC,CAAC;MAC7B,IAAIQ,QAAQ,GAAG,CAAC;MAChBF,KAAK,GAAG,IAAID,KAAK,CACfX,MAAM,CAACe,OAAO,CAAC,KAAK,EAAE,YAAW;QAAE,OAAOF,IAAI,CAACC,QAAQ,EAAE,CAAC;MAAE,CAAC,CAC/D,CAAC;MACDF,KAAK,CAACI,IAAI,GAAG,qBAAqB;IACpC;IAEAJ,KAAK,CAACK,WAAW,GAAG,CAAC,CAAC,CAAC;IACvB,MAAML,KAAK;EACb;AACF,CAAC;AAEDM,MAAM,CAACC,OAAO,GAAGrB,SAAS"},"metadata":{},"sourceType":"script","externalDependencies":[]}