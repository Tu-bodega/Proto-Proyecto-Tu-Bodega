{"ast":null,"code":"import useEventListener from './useEventListener';\nimport { useCallback } from 'react';\n/**\r\n * Attaches an event handler outside directly to the `document`,\r\n * bypassing the react synthetic event system.\r\n *\r\n * ```ts\r\n * useGlobalListener('keydown', (event) => {\r\n *  console.log(event.key)\r\n * })\r\n * ```\r\n *\r\n * @param event The DOM event name\r\n * @param handler An event handler\r\n * @param capture Whether or not to listen during the capture event phase\r\n */\nexport default function useGlobalListener(event, handler, capture = false) {\n  const documentTarget = useCallback(() => document, []);\n  return useEventListener(documentTarget, event, handler, capture);\n}","map":{"version":3,"names":["useEventListener","useCallback","useGlobalListener","event","handler","capture","documentTarget","document"],"sources":["C:/Users/kamil/OneDrive/Escritorio/Proto-Proyecto-Tu-Bodega/front/node_modules/@restart/hooks/esm/useGlobalListener.js"],"sourcesContent":["import useEventListener from './useEventListener';\r\nimport { useCallback } from 'react';\r\n/**\r\n * Attaches an event handler outside directly to the `document`,\r\n * bypassing the react synthetic event system.\r\n *\r\n * ```ts\r\n * useGlobalListener('keydown', (event) => {\r\n *  console.log(event.key)\r\n * })\r\n * ```\r\n *\r\n * @param event The DOM event name\r\n * @param handler An event handler\r\n * @param capture Whether or not to listen during the capture event phase\r\n */\r\nexport default function useGlobalListener(event, handler, capture = false) {\r\n  const documentTarget = useCallback(() => document, []);\r\n  return useEventListener(documentTarget, event, handler, capture);\r\n}"],"mappings":"AAAA,OAAOA,gBAAgB,MAAM,oBAAoB;AACjD,SAASC,WAAW,QAAQ,OAAO;AACnC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,SAASC,iBAAiBA,CAACC,KAAK,EAAEC,OAAO,EAAEC,OAAO,GAAG,KAAK,EAAE;EACzE,MAAMC,cAAc,GAAGL,WAAW,CAAC,MAAMM,QAAQ,EAAE,EAAE,CAAC;EACtD,OAAOP,gBAAgB,CAACM,cAAc,EAAEH,KAAK,EAAEC,OAAO,EAAEC,OAAO,CAAC;AAClE"},"metadata":{},"sourceType":"module","externalDependencies":[]}